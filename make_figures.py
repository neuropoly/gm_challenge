#!/usr/bin/env python
#
# Make figures to assess metrics sensitivity to image quality. Run after process_folder.py
#
# USAGE:
# The script should be launched using SCT's python:
#   PATH_GMCHALLENGE="PATH TO THIS REPOSITORY"
#   ${SCT_DIR}/python/bin/python ${PATH_GMCHALLENGE}make_figures.py -i results_all.csv
#
# OUTPUT:
# Figs
#
# Authors: Julien Cohen-Adad
# License: https://github.com/neuropoly/gm_challenge/blob/master/LICENSE

import os, sys
import argparse
import numpy as np
import nibabel as nib
import scipy.ndimage as ndimage
# append path to useful SCT scripts
path_sct = os.getenv('SCT_DIR')
sys.path.append(os.path.join(path_sct, 'scripts'))
import sct_utils as sct
from msct_image import Image
from spinalcordtoolbox.metadata import read_label_file, parse_id_group
import pandas as pd
import matplotlib.pyplot as plt

def get_parameters():
    parser = argparse.ArgumentParser(description='Make figures to assess metrics sensitivity to image quality. Run '
                                                 'after process_folder.py')
    parser.add_argument("-i", "--input",
                        help="CSV file generated by process_folder.py.",
                        required=True)
    args = parser.parse_args()
    return args


def main():
    sct.init_sct()  # start logger
    # default params

    # Read CSV
    results_all = pd.read_csv(file_csv)

    # plot fig
    fig, ax = plt.subplots(1)

    plt.violinplot(list_data, pos, points=100, widths=0.8, showmeans=True, showextrema=True, showmedians=True,
                   bw_method=0.5)
    plt.grid(axis='y')
    plt.ylabel('Dice coefficient')
    plt.xticks(pos, args.label)
    ax.spines['right'].set_visible(False)
    ax.spines['left'].set_visible(False)
    ax.spines['top'].set_visible(False)
    ylim = ax.get_ylim()
    for i in range(nb_plots):
        plt.text(i + 0.02, ylim[0] + 0.01, text_results[i], horizontalalignment='left', verticalalignment='bottom')
    plt.savefig('violin_plot.png')
    #


if __name__ == "__main__":
    args = get_parameters()
    file_csv = args.input
    main()
